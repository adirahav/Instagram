/* responsive layout */
@mixin mobile-layout {
  @media (max-width: $padded-break-mobile) { 
		@content;
	}
}

@mixin desktop-layout {
  @media (min-width: $padded-break-desktop) {
		@content;
	}
}

@mixin layout-grid-template-columns($platform) {
  @if $platform == 'mobile' {
    grid-template-columns: minmax($layout-padding, 1fr) minmax(auto, calc(#{$break-mobile})) minmax($layout-padding, 1fr);
  }

  @if $platform == 'desktop' {
    grid-template-columns: $sidenav-width 1fr;
  }

  @if $platform == 'desktop-logout' {
    grid-template-columns: auto 1fr;
  }
}

@mixin base-layout($platform) {
  display: grid;
	grid-template-columns: $layout-padding 1fr $layout-padding;
  height: calc(100vh);

  > *:not(.full) { 
    grid-column: 2;
  }

  > *.full { 
    grid-column: 1/-1;
  }

  @if $platform == 'mobile' {
    header {
      display: grid;
    }

    > *:not(.mobile-full) { 
      grid-column: 2;
    }
  
    > *.mobile-full { 
      grid-column: 1/-1;
    }
  }

}

@mixin header-grid-template-columns($platform) {
  @if $platform == 'mobile' {
    grid-template-columns: minmax($layout-padding, 1fr) minmax(auto, calc(#{$break-mobile})) minmax($layout-padding, 1fr)
  }

  @if $platform == 'desktop' {
    grid-template-columns: minmax($layout-padding, 1fr) 200px minmax(auto, calc(#{$break-desktop} - 200px)) minmax($layout-padding, 1fr)
  }
}

@mixin footer-grid-template-columns($media) {
  grid-template-columns: minmax($layout-padding, 1fr) minmax(auto, $media) minmax($layout-padding, 1fr)
}

@mixin button($type: 'default') {
  border: 0;
  text-transform: none;
  width: -webkit-min-content;
  width: -moz-min-content;
  width: fit-content;
  margin: auto;
  
  @if str-index($type, 'default') or str-index($type, 'light') {
    background-color: var(--button-default-background);
    color: var(--button-default-text);
    border-radius: 8px;
    height: 32px;
    font-size: rem(14px);
    font-weight: 600;
    padding: 4px 15px 6px 17px;
    box-sizing: border-box;

    @if str-index($type, 'hover') {
      background-color: var(--button-default-background-hover);
      color: var(--button-default-text-hover);
    }
  }

  @if str-index($type, 'default') and str-index($type, 'disabled') {
    background-color: var(--button-default-background-disabled);
  }

  @if str-index($type, 'light') {
    background-color: var(--button-light-background);
    color: var(--button-light-text);

    @if str-index($type, 'hover') {
      background-color: var(--button-light-background-hover);
      color: var(--button-light-text-hover);
    }
  }

  @if str-index($type, 'modal') {
    background-color: var(--button-modal-background);
    color: var(--button-modal-text);
    font-size: rem(14px);
    font-weight: 400;
    width: 100%;
    height: 48px;
    border-top: 1px solid var(--button-modal-border);

    @if str-index($type, 'error') { 
      color: var(--button-modal-error-text);
      font-weight: 700;
    }
    @else if str-index($type, 'warning') { 
      color: var(--button-modal-warning-text);
      font-weight: 700;
    }
  }

  @if str-index($type, 'link') {

    @if str-index($type, 'tiny') {
      font-size: rem(12px);
    }
    @else if str-index($type, 'small') {
      font-size: rem(14px);
    }
    
    font-weight: 600;
    color: var(--text-action);
    background: transparent;
    margin: 0;
    padding: 0;
  
    @if str-index($type, 'hover') {
      color: var(--text-action-hover);
      cursor: default;
    }
  }
  

  @if $type == 'action' {
    font-size: rem(12px);
    font-weight: 600;
    color: var(--text-action-dark);
    background: transparent;
    margin: 0;
    padding: 0;
  }

  @if $type == 'action-hover' {
    color: var(--text-action-hover);
    cursor: default;
    background: transparent;
    margin: 0;
    padding: 0;
  }
}

@mixin text($type: 'small-bold') {
  @if str-index($type, 'light') {
    color: var(--text-light);
  }
  @else  {
    color: var(--text);
  }

  @if str-index($type, 'tiny') {
    font-size: rem(12px);
  }
  @else if str-index($type, 'small') {
    font-size: rem(14px);
  } 
  @else if str-index($type, 'medium') {
    font-size: rem(16px);
  }
  @else if str-index($type, 'big') {
    font-size: rem(20px);
    font-weight: 400;
  }

  @if str-index($type, 'bold') {
    font-weight: 600;
  }
}

@mixin text-blank($type: 'medium-bold') {
  color: var(--text-blank);

  @if str-index($type, 'tiny') {
    font-size: rem(12px);
  }
  @else if str-index($type, 'small') {
    font-size: rem(14px);
  } 
  @else if str-index($type, 'medium') {
    font-size: rem(16px);
  }
  @else if str-index($type, 'big') {
    font-size: rem(20px);
    font-weight: 400;
  }

  @if str-index($type, 'bold') {
    font-weight: 700;
  }
}

@mixin link($type: 'small-bold') {
  color: var(--text-action);

  @if str-index($type, 'tiny') {
    font-size: rem(12px);
  } 

  @if str-index($type, 'small') {
    font-size: rem(14px);
  } 

  @if str-index($type, 'bold') {
    font-weight: 600;
  } 
  
  @if str-index($type, 'hover') {
    cursor: default;    
    color: var(--text-action-hover);
  } 
}

/* scrollbar */
@mixin scrollbar {
    overflow: auto;

    &::-webkit-scrollbar {
        width: 12px;

        &-thumb {
            background-color: var(--scrollbar-thumb-background);
            border-radius: 0;
            &:hover {
              background-color: var(--scrollbar-thumb-background-hover);
              border: 1px solid var(--scrollbar-track-border-hover);
          }
        }
          
        &-track {
            background-color: var(--scrollbar-track-background);
            border-radius: 0;
    
            &:hover {
                border: 1px solid var(--scrollbar-track-border-hover);
            }
        }
    }
}